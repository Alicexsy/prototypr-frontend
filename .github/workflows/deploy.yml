name: Deploy Next.js App

on:
  push:
    branches:
      - main

env:
  # STAGING_DIR: /tmp/my-app-staging
  # LIVE_DIR: /var/www/my-app
  STAGING_DIR_PATH: ${{ vars.STAGING_DIR_PATH }}
  LIVE_DIR_PATH: ${{ vars.LIVE_DIR_PATH }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
  NEXT_PUBLIC_HOME_URL: ${{ secrets.NEXT_PUBLIC_HOME_URL }}
  NEXT_PUBLIC_MEILISEARCH_KEY: ${{ secrets.NEXT_PUBLIC_MEILISEARCH_KEY }}
  NEXT_PUBLIC_MEILISEARCH_URL: ${{ secrets.NEXT_PUBLIC_MEILISEARCH_URL }}
  NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}
  NEXT_PUBLIC_PLAUSIBLE: ${{ secrets.NEXT_PUBLIC_PLAUSIBLE }}
  NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
  NEXT_PUBLIC_STRAPI_API_URL: ${{ secrets.NEXT_PUBLIC_STRAPI_API_URL }}
  SECRET_COOKIE_PASSWORD: ${{ secrets.SECRET_COOKIE_PASSWORD }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  STRAPI_DATABASE_URL: ${{ secrets.STRAPI_DATABASE_URL }}
  STRAPI_PREVIEW_SECRET: ${{ secrets.STRAPI_PREVIEW_SECRET }}
  STRAPI_READONLY_TOKEN: ${{ secrets.STRAPI_READONLY_TOKEN }}
  NEXT_PUBLIC_SUPABASE_ANON: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install dependencies
      #GITHUB_PERSONAL_ACCESS_TOKEN for private npm packages
      run: GITHUB_PERSONAL_ACCESS_TOKEN=${{secrets.GH_PERSONAL_ACCESS_TOKEN}} npm install --legacy-peer-deps

    - name: Build Next.js app
      run: |
        mkdir -p ${{ env.STAGING_DIR_PATH }}
        npm run build
        cp -r .next ${{ env.STAGING_DIR_PATH }}

    - name: Deploy to server
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Add the server's host key to known_hosts
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

        ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "echo 'Checking and cleaning staging directory of .next folder...' && if [ -d ${{ env.STAGING_DIR_PATH }}/.next ]; then rm -rf ${{ env.STAGING_DIR_PATH }}/.next; fi"
        scp -r ${{ env.STAGING_DIR_PATH }}/.next ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:${{ env.STAGING_DIR_PATH }}
        ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
          set -e
          trap 'echo \"An error occurred. Reverting to backup...\"; mv ${{ env.LIVE_DIR_PATH }}.backup ${{ env.LIVE_DIR_PATH }}' ERR
          echo "Checking if live directory exists..." | tee -a /var/log/prototypr/deploy.log
          if [ -d ${{ env.LIVE_DIR_PATH }} ]; then
            echo "Moving live directory to backup..." | tee -a /var/log/prototypr/deploy.log
            mv ${{ env.LIVE_DIR_PATH }} ${{ env.LIVE_DIR_PATH }}.backup
          fi
          echo "Moving .next to live directory..." | tee -a /var/log/prototypr/deploy.log
          trap 'echo \"An error occurred. Reverting to backup...\"; rsync -a ${{ env.LIVE_DIR_PATH }}.backup/ ${{ env.LIVE_DIR_PATH }}/' ERR
          while [ ! -d "${{ env.STAGING_DIR_PATH }}/.next" ]; do
          echo "Waiting for .next directory to be copied..."
            sleep 5
          done
          echo "Checking if ${env.LIVE_DIR_PATH} exists..."
          if [ -d "${env.LIVE_DIR_PATH}" ]; then
            echo "${env.LIVE_DIR_PATH} exists."
          else
            echo "${env.LIVE_DIR_PATH} does not exist."
          fi

          echo "Checking if ${env.LIVE_DIR_PATH}/.next exists..."
          if [ -d "${env.LIVE_DIR_PATH}/.next" ]; then
            echo "${env.LIVE_DIR_PATH}/.next exists."
          else
            echo "${env.LIVE_DIR_PATH}/.next does not exist."
          fi
          mv ${{ env.STAGING_DIR_PATH }}/.next ${{ env.LIVE_DIR_PATH }}/.next
          echo "Restarting application..." | tee -a /var/log/prototypr/deploy.log
          pm2 restart prototypr-5
        "